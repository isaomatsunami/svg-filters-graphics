<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 20010904//EN" 
  "http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd">

<svg width="100%" height="100%" onload="init(evt)"
     xmlns="http://www.w3.org/2000/svg">

  <script type="text/ecmascript"> 
    <![CDATA[

    var width         = 800;
    var height        = 500;
    var basePointX    = 300;
    var basePointY    = 250;
    var currentX      = 0;
    var currentY      = 0;
    var offsetX       = 0;
    var offsetY       = 0;
    var radius        = 0;
    var minorAxis     = 20;
    var majorAxis     = 40;
    var Constant      = 120;
    var angle         = 0;
    var maxAngle      = 360;
    var angleDelta    = 4;
    var strokeWidth   = 2;
    var fillColor     = "";
    var style         = "";
    var rVal          = 0;
    var gVal          = 0;
    var bVal          = 0;

    var ellipseNode   = null;
    var cBezierNode   = null;
    var svgDocument   = null;
    var gcNode        = null;
    var svgNS         = "http://www.w3.org/2000/svg";

    function init(evt) {
       svgDocument = evt.target.ownerDocument; 
       gcNode = svgDocument.getElementById("gc")

       drawSpiral();
    }

    function drawSpiral() {
       for(angle=1; angle<maxAngle; angle+=angleDelta) {
          radius = Constant*
                   (1+Math.cos(angle*Math.PI/180));
  
          offsetX = radius*Math.cos(angle*Math.PI/180);
          offsetY = radius*Math.sin(angle*Math.PI/180);

          currentX = basePointX+offsetX;
          currentY = basePointY-offsetY;
  
          rVal = angle*255/maxAngle;
          gVal = 0;
          bVal = 0;

          addEllipse(currentX, currentY);

          currentX = basePointX-offsetX;
          currentY = basePointY-offsetY;
          addEllipse(currentX, currentY);

          rVal = (maxAngle-angle)*255/maxAngle;
          gVal = 0;
          bVal = 0;

          currentX = basePointX-offsetX/2;
          currentY = basePointY+offsetY/2;
          addEllipse(currentX, currentY);

          currentX = basePointX+offsetX/2;
          currentY = basePointY+offsetY/2;
          addEllipse(currentX, currentY);
       }
    } // drawSpiral

    function drawCBezierArc() {
       // outer bezier arc...
       points  = "m"+(currentX)+","+(currentY)+" ";
       points += "C"+(majorAxis)+","+(-5*majorAxis/4)+" ";
       points +=     (0)+","+(4*majorAxis/2)+" ";
       points +=     (0)+","+(3*majorAxis/2)+" ";
       points += "S"+(0)+","+(3*majorAxis/2)+" ";
       points +=     (0)+","+(4*majorAxis/2)+" ";

       style  = "fill:red;stroke-width:8";
       style += ";stroke-dasharray:8 8 8 8";

     //cBezierNode = svgDocument.createElement("path");
       cBezierNode = svgDocument.createElementNS(svgNS, "path");
       cBezierNode.setAttribute("d", points);
       cBezierNode.setAttribute("style", style);
       gcNode.appendChild(cBezierNode);

       // inner bezier arc...
       points  = "m"+(currentX)+","+(currentY)+" ";
       points += "C"+(2*majorAxis/2)+","+(-3*majorAxis/4)+" ";
       points +=     (majorAxis/2)+","+(0)+" ";
       points +=     (0)+","+(2*majorAxis)+" ";

     //cBezierNode = svgDocument.createElement("path");
       cBezierNode = svgDocument.createElementNS(svgNS, "path");
       cBezierNode.setAttribute("d", points);
       cBezierNode.setAttribute("style", "stroke:red;stroke-width:8");
       gcNode.appendChild(cBezierNode);
    }

    function addEllipse(currentX, currentY) {
       fillColor   = "rgb("+rVal+","+gVal+","+bVal+")";
       strokeColor = "rgb("+rVal+","+gVal+","+bVal+")";

       style  = "fill:url(#checkerPattern)";
       style += ";stroke:yellow";
       style += ";stroke-width:"+strokeWidth;

       ellipseNode = document.createElementNS(svgNS, "ellipse");
       ellipseNode.setAttribute("style",style);
       ellipseNode.setAttribute("cx", currentX);
       ellipseNode.setAttribute("cy", currentY);
       ellipseNode.setAttribute("rx", majorAxis);
       ellipseNode.setAttribute("ry", minorAxis);
       gcNode.appendChild(ellipseNode);

       drawCBezierArc();
    }
  ]]> </script>

<!-- ============================ -->
<defs>
  <filter id="turbFilter4" in="SourceImage" 
           filterUnits="objectBoundingBox">
      <feTurbulence baseFrequency="0.05" numOctaves="1" 
                    result="turbulenceOut1"/> 
        <feDisplacementMap in="SourceGraphic" in2="turbulenceOut1" 
                           xChannelSelector="B" yChannelSelector="B"
                           scale="10"/> 
   </filter>

  <pattern id="checkerPattern" 
           width="80" height="80"
           patternUnits="userSpaceOnUse">

     <rect fill="red"
           x="0"  y="0"  width="40" height="40"/> 

     <rect fill="blue"
           x="40" y="0"  width="40" height="40"/> 

     <rect fill="blue"
           x="0"  y="40" width="40" height="40"/> 

     <rect fill="red"
           x="40" y="40" width="40" height="40"/> 
  </pattern>
  </defs>

<g id="gc" transform="translate(10,10)" 
   filter="url(#turbFilter4)">  
  <rect x="0" y="0" 
        width="800" height="500" 
        fill="none" stroke="none"/>
</g>
</svg>


