<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 20010904//EN" 
  "http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd">

<svg width="100%" height="100%" onload="init(evt)"
     xmlns="http://www.w3.org/2000/svg">

  <script type="text/ecmascript"> 
    <![CDATA[
    var width         = 800;
    var height        = 500;
    var basePointX    = 10;
    var basePointY    = 120;
    var fixedPointX1  = 400;
    var fixedPointY1  = 20;
    var fixedPointX2  = 400;
    var fixedPointY2  = 300;
    var currentX      = 0;
    var currentY      = 0;
    var offsetX       = 0;
    var offsetY       = 0;
    var angle         = 0;
    var maxAngle      = 540;
    var angleDelta    = 4;
    var strokeWidth   = 4;
    var style         = "";
    var dashStyle     = "2 2 2 2";
    var strokeColor   = "white";
    var points        = "";
    var points2       = "";
    var amplitude     = 20;
    var frequency     = 1;
    var rVal          = 0;
    var gVal          = 0;
    var bVal          = 0;
 
    var polygonNode   = null;
    var bgNode        = null;
    var svgDocument   = null;
    var gcNode        = null;
    var svgNS         = "http://www.w3.org/2000/svg";

    function init(evt) {
       svgDocument = evt.target.ownerDocument; 
       gcNode = svgDocument.getElementById("gc")

       drawBackground();
    }

    function drawBackground() {
       points = "";

       for(angle=0; angle<maxAngle; angle+=angleDelta) {
          offsetX = 2*angle/angleDelta;
          offsetY = amplitude*Math.sin(frequency*angle*Math.PI/180)*
                    Math.tan(frequency*angle*Math.PI/180);

          currentX = basePointX+offsetX;
          currentY = basePointY-offsetY;

          points += currentX+","+currentY+" ";
       }

       // top sine wave...
       points2  = basePointX+","+basePointY+" ";
       points2 += points;
       points2 += fixedPointX1+","+fixedPointY1+" ";

       style  = "fill:url(#radialGradient1)";
       style += ";stroke:"+strokeColor;
       style += ";stroke-width:"+strokeWidth;
       style += ";stroke-dasharray:"+dashStyle;

       bgNode = svgDocument.createElementNS(svgNS, "polygon");
       bgNode.setAttribute("style",style);
       bgNode.setAttribute("points", points2);
       gcNode.appendChild(bgNode);

       // left sine wave...
       points2  = basePointX+","+basePointY+",";
       points2 += points;
       points2 += fixedPointX2+","+fixedPointY2+" ";

       style = "fill:url(#radialGradient2)";
       style += ";stroke:"+strokeColor;
       style += ";stroke-width:"+strokeWidth;
       style += ";stroke-dasharray:"+dashStyle;

       bgNode = svgDocument.createElementNS(svgNS, "polygon");
       bgNode.setAttribute("style",style);
       bgNode.setAttribute("points", points2);
       gcNode.appendChild(bgNode);

       // right sine wave...
       points2  = fixedPointX1+","+fixedPointY1+" ";
       points2 += currentX+","+currentY+" ";
       points2 += fixedPointX2+","+fixedPointY2+" ";

       style  = "fill:black";
       style += ";stroke:"+strokeColor;
       style += ";stroke-width:"+strokeWidth;
       style += ";stroke-dasharray:"+dashStyle;

       bgNode = svgDocument.createElementNS(svgNS, "polygon");
       bgNode.setAttribute("style",style);
       bgNode.setAttribute("points", points2);
       gcNode.appendChild(bgNode);
    }
  ]]> </script>

<!-- ============================ -->
<defs>
  <filter id="turbFilter4" in="SourceImage" 
           filterUnits="objectBoundingBox">
      <feTurbulence baseFrequency="0.55" numOctaves="2" 
                    result="turbulenceOut1"/> 
        <feDisplacementMap in="SourceGraphic" in2="turbulenceOut1" 
                           xChannelSelector="B" yChannelSelector="B"
                           scale="10"/> 
   </filter>

    <radialGradient id="radialGradient1" 
                    gradientUnits="userSpaceOnUse"
                    cx="400" cy="200" r="300" 
                    fx="400" fy="200">
      <stop offset="0%"   stop-color="red"/>
      <stop offset="33%"  stop-color="blue"/>
      <stop offset="67%"  stop-color="red"/>
      <stop offset="100%" stop-color="blue"/>
    </radialGradient>

    <radialGradient id="radialGradient2" 
                    gradientUnits="userSpaceOnUse"
                    cx="400" cy="200" r="300" 
                    fx="400" fy="200">
      <stop offset="0%"   stop-color="yellow"/>
      <stop offset="33%"  stop-color="blue"/>
      <stop offset="67%"  stop-color="yellow"/>
      <stop offset="100%" stop-color="blue"/>
    </radialGradient>
</defs>

<g id="gc" transform="translate(10,10)" 
   filter="url(#turbFilter4)">  
  <rect x="0" y="0" 
        width="800" height="500" 
        fill="none" stroke="none"/>
</g>
</svg>

