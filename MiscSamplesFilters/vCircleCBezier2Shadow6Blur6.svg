<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 20010904//EN" 
  "http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd">

<svg width="100%" height="100%" onload="init(evt)"
     xmlns:xlink="http://www.w3.org/1999/xlink" 
     xmlns="http://www.w3.org/2000/svg">

  <script type="text/ecmascript"> 
    <![CDATA[
     var basePointX      = 20;
     var basePointY      = 80;
     var shadowX         = 10;
     var shadowY         = 10;
     var anchorX         = 100;
     var anchorY         = 250;
     var currentX        = 0.0;
     var currentY        = 0.0;
     var radius          = 50;
     var radiusValues    = [50,75,75,100];
     var style           = "";
     var points          = "";
     var fillColors      = ['red','#880088','blue','yellow'];
     var fillCount       = 4;
     var strokeColors    = ['#880088','white','yellow','red'];
     var strokeCount     = 4;
     var strokeWidths    = [1, 4, 8];
     var widthCount      = 3;
     var dashStyles      = ["4 4 4 4", "2 2 2 2", "1 1 1 1"];
     var dashCount       = 3;
     var position        = 0;
     var rowCount        = 2;
     var colCount        = 2;
     var theAngle        = 0;
     var baseAngle       = 145;
     var angleCount      = 4;
     var angleValues     = Array(angleCount);
     var hInterGap       = 150;
     var vInterGap       = 150;
     var vertexCount     = 4;
     var pGonXPts        = Array(vertexCount);
     var pGonYPts        = Array(vertexCount);
     var nestedXPts      = Array(vertexCount);
     var nestedYPts      = Array(vertexCount);
     var upperLeftXPts   = Array(1);
     var upperLeftYPts   = Array(1);
 
     var circleNode      = null;
     var bezierNode      = null;
     var nestedNode      = null;
     var svgDocument     = null;
     var gcNode          = null;
     var svgNS           = "http://www.w3.org/2000/svg";
 
     function init(evt) {
        svgDocument = evt.target.ownerDocument; 
        gcNode = svgDocument.getElementById("gc")
 
        drawSpiral();
     }

     function updatePoints(index) {
        for(var a=0; a<angleCount; a++) {
           angleValues[a] = (a+index)*baseAngle;
        }

        for(var a=0; a<angleCount; a++) {
           theAngle = angleValues[(index*a)%vertexCount];

           nestedXPts[a] = radiusValues[a]*Math.cos(
                                      theAngle*Math.PI/180);

           nestedYPts[a] = radiusValues[a]*Math.sin(
                                      theAngle*Math.PI/180);
        }
     }

     function updateCornerVertices(row,col) {
        upperLeftXPts[0] = anchorX+col*hInterGap;
        upperLeftYPts[0] = anchorY-row*vInterGap;
     }

     function drawSpiral() {
        for(var row=0; row<rowCount; row++) {
           for(var col=0; col<colCount; col++) {
              position = row*colCount+col;

              updatePoints(((position%2)*2)+1);
              updateCornerVertices(row, col);

              drawCircle(); 
              addBezierCurve();

              style += ";fill:"+fillColors[(position+3)%fillCount];
              updatePoints(((position%2)*2)+1);
              addBezierCurve();
           }
        }
     } // drawSpiral

     function drawCircle() {
        // draw shadow...
        circleNode = svgDocument.createElementNS(svgNS, "circle");
        circleNode.setAttribute("style","fill:black");
        circleNode.setAttribute("cx",   upperLeftXPts[0]+shadowX);
        circleNode.setAttribute("cy",   upperLeftYPts[0]+shadowY);
        circleNode.setAttribute("r",    radiusValues[position%4]);
        gcNode.appendChild(circleNode);

        style  = "fill:"+fillColors[position%strokeCount];
        style += ";stroke:"+strokeColors[position%strokeCount];
        style += ";stroke-dasharray:"+dashStyles[position%dashCount];
        style += ";stroke-width:"+strokeWidths[position%widthCount];
  
        circleNode = svgDocument.createElementNS(svgNS, "circle");
        circleNode.setAttribute("style",style);
        circleNode.setAttribute("filter","url(#blurFilter1)"); 
        circleNode.setAttribute("cx",   upperLeftXPts[0]);
        circleNode.setAttribute("cy",   upperLeftYPts[0]);
        circleNode.setAttribute("r",    radiusValues[position%4]);
        gcNode.appendChild(circleNode);
     }

     function addBezierCurve() {
        for(var a=0; a<angleCount; a++) {
           pGonXPts[a] = upperLeftXPts[0]+nestedXPts[a];
           pGonYPts[a] = upperLeftYPts[0]+nestedYPts[a];
        }

        points  = "M"+(pGonXPts[0])+","+
                      (pGonYPts[0])+" ";

        points += "C"+(pGonXPts[1])+","+
                      (pGonYPts[1])+" ";

        points +=     (pGonXPts[2])+","+
                      (pGonYPts[2])+" ";

        points +=     (pGonXPts[3])+","+
                      (pGonYPts[3])+" ";

        // render bezier curve...
        bezierNode = svgDocument.createElementNS(svgNS, "path");
        bezierNode.setAttribute("filter","url(#blurFilter1)"); 
        bezierNode.setAttribute("style",style);
        bezierNode.setAttribute("d", points);
        gcNode.appendChild(bezierNode);
     }
  ]]> </script>

<!-- ============================ -->
<defs>
  <filter
     id="blurFilter1"
     filterUnits="objectBoundingBox"
     x="0" y="0" 
     width="100%" height="100%"> 
     <feGaussianBlur stdDeviation="8"/>
  </filter>
</defs>

<g id="gc" transform="translate(20,20)"> 
  <rect x="0" y="0" 
        width="800" height="500" 
        fill="none" stroke="none"/>
</g>
</svg>

