<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 20010904//EN" 
  "http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd">

<svg width="100%" height="100%" onload="init(evt)"
     xmlns:xlink="http://www.w3.org/1999/xlink" 
     xmlns="http://www.w3.org/2000/svg">

  <script type="text/ecmascript"> 
    <![CDATA[
     var basePointX     = -50;
     var basePointY     = 20;
     var currentX       = 0.0;
     var currentY       = 0.0;
     var angle          = 0;
     var startAngle     = 0;
     var endAngle       = 720; // 360.;
     var amplitude      = 40;
     var deltaY         = 0;
     var endX           = Math.floor(endAngle);
     var frequency      = 3;
     var points         = "";
     var offsetX        = 0;
     var offsetY        = 0;
     var cellStyle      = "";
     var cellColors     = ['red','blue'];
     var colorCount     = 2;
     var sineXPts       = Array(endX);
     var sineYPts       = Array(endX);
     var rowCount       = 4;
     var colCount       = 10;
     var cellWidth      = Math.floor((endAngle-startAngle)/colCount);
     var cellHeight     = cellWidth;
  
     var pathNode       = null;
     var svgDocument    = null;
     var gcNode         = null;
     var svgNS           = "http://www.w3.org/2000/svg";
 
     function init(evt) {
        svgDocument = evt.target.ownerDocument; 
        gcNode = svgDocument.getElementById("gc")
 
        initializePoints();
        drawSineWave();
     }

     function initializePoints() {
        for(var x=0; x<endX; x++) {
           theAngle = frequency*(startAngle+x)*Math.PI/180;
           deltaY = amplitude/((5*x+1)%amplitude);

           sineXPts[x] = x;
           sineYPts[x] = deltaY;
        }
     }

     function drawSineWave() {
        for(var row=0; row<rowCount; row++) {
           for(var col=0; col<colCount; col++) {
              offsetX = Math.floor(col*cellWidth);
              offsetY = Math.floor(row*cellHeight);

              points = "M"+(basePointX+sineXPts[offsetX])+","+
                           (basePointY+offsetY+sineYPts[offsetX])+" ";

              // top curve of cell...
              for(var w=0; w<cellWidth-1; w++) {
                 deltaX = sineXPts[offsetX+w+1]-
                          sineXPts[offsetX+w];

                 deltaY = sineYPts[offsetX+w+1]-
                          sineYPts[offsetX+w];

                 points += "l"+(deltaX)+","+(deltaY)+" ";
              }

              // right curve of cell...
              points += "m0,0 ";
              points += "q"+(-cellHeight)+","+(-cellHeight)+" ";
              points += (0)+","+(cellHeight)+" ";

              // bottom curve of cell...
              for(var w=cellWidth-1; w>=0; w--) {
                 deltaX = sineXPts[offsetX+w]-
                          sineXPts[offsetX+w+1];

                 deltaY = sineYPts[offsetX+w]-
                          sineYPts[offsetX+w+1];

                 points += "l"+(deltaX)+","+(deltaY)+" ";
              }

              // left curve of cell...
              points += "a"+(cellHeight)+","+(cellHeight)+" ";
              points += "0 0,1 "+(0)+","+(-cellHeight)+" ";

              if( ((row+col)%colorCount) == 0 ) { 
                 cellStyle = "fill:url(#blueCircle)";
              } else { 
                 cellStyle  = "fill:url(#redCircle)";
                 cellStyle += ";filter:url(#blurFilter1)";
              } 
   
              pathNode = document.createElementNS(svgNS, "path");
              pathNode.setAttribute("style",cellStyle);
              pathNode.setAttribute("d",    points);
              gcNode.appendChild(pathNode);
           }
        }
     }
  ]]> </script>

<!-- ============================ -->
<defs>
  <filter
     id="blurFilter1"
     filterUnits="objectBoundingBox"
     x="0" y="0" 
     width="100%" height="100%"> 
     <feGaussianBlur stdDeviation="8"/>
  </filter>

  <radialGradient id="redCircle" 
                  gradientUnits="objectBoundingBox"
                  fx="70%" fy="70%">
   
    <stop offset="0%"   style="stop-color:#FFFFFF"/>
    <stop offset="40%"  style="stop-color:#AA0000"/>
    <stop offset="100%" style="stop-color:#660000"/>
  </radialGradient>
   
  <radialGradient id="blueCircle" 
                  gradientUnits="objectBoundingBox"
                  fx="70%" fy="70%">
    <stop offset="0%"   style="stop-color:#FFFFFF"/>
    <stop offset="40%"  style="stop-color:#0000AA"/>
    <stop offset="100%" style="stop-color:#000066"/>
  </radialGradient>
</defs>

<g id="gc" transform="translate(20,20)"> 
  <rect x="0" y="0" 
        width="800" height="500" 
        fill="none" stroke="none"/>
</g>
</svg>

