<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 20010904//EN" 
  "http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd">

<svg width="100%" height="100%" onload="init(evt)"
     xmlns="http://www.w3.org/2000/svg">

  <script type="text/ecmascript"> 
    <![CDATA[
    var basePointX    = 100;
    var basePointY    = 250;
    var currentX      = 0;
    var currentY      = 0;
    var offsetX       = 0;
    var offsetY       = 0;
    var radius        = 0;
    var minorAxis     = 50;
    var majorAxis     = 100;
    var minorDelta    = 1;
    var majorDelta    = 2;
    var Constant      = 120;
    var angle         = 0;
    var maxAngle      = 360;
    var eGap          = 8;
    var angleDelta    = 2;
    var shortPause    = 10;
    var strokeWidth   = 2;
    var fillColor     = "";
    var style         = "";
    var points        = "";
    var rVal          = 0;
    var gVal          = 0;
    var bVal          = 0;

    var ellipseNode   = null;
    var cBezierNode   = null;
    var svgDocument   = null;
    var gcNode        = null;
    var svgNS         = "http://www.w3.org/2000/svg";

    function init(evt) {
       svgDocument = evt.target.ownerDocument; 
       gcNode = svgDocument.getElementById("gc")

       drawSpiral();
    }

    function drawSpiral() {
       for(angle=0; angle<maxAngle; angle+=angleDelta) {
          radius = Constant*
                   (1+Math.cos(angle*Math.PI/180));
  
          offsetX = radius*Math.cos(angle*Math.PI/180);
          offsetY = radius*Math.sin(angle*Math.PI/180);

          currentX = basePointX+offsetX;
          currentY = basePointY-offsetY;
  
          rVal = angle*255/maxAngle;
          gVal = 0;
          bVal = 0;

          fillColor = 
                  "rgb("+rVal+","+gVal+","+bVal+")";

          strokeColor = 
                  "rgb("+rVal+","+gVal+","+bVal+")";

          style  = "fill:"+strokeColor;
          style += ";stroke:yellow";
          style += ";stroke-width:"+strokeWidth;

          ellipseNode = document.createElementNS(svgNS, "ellipse");
          ellipseNode.setAttribute("style",style);
          ellipseNode.setAttribute("cx", currentX);
          ellipseNode.setAttribute("cy", currentY);
          ellipseNode.setAttribute("rx", majorAxis);
          ellipseNode.setAttribute("ry", minorAxis);
          gcNode.appendChild(ellipseNode);

          drawCBezierArc();

          if( angle % eGap == 0 ) {
             minorAxis -= minorDelta;
             majorAxis -= majorDelta;

             if( minorAxis < 0 ) { minorAxis = 0; }
             if( majorAxis < 0 ) { majorAxis = 0; }
          }
       }
    } // drawSpiral

    function drawCBezierArc() {
       // outer bezier arc...
       points  = "m"+(currentX+majorAxis/2)+","+(currentY)+" ";

       points += "a"+(majorAxis/2)+","+
                     (majorAxis/2)+" ";
       points +=     "0 0,0 "+(majorAxis)+",0 ";

       points += "a"+(majorAxis/2)+","+
                     (majorAxis/2)+" ";
       points +=     "0 0,0 "+(majorAxis)+",0 ";

       points += "C"+(currentX+majorAxis/2)+","+
                     (currentY-5*majorAxis/2)+" ";
       points +=     (currentX+3*majorAxis/2)+","+
                     (currentY)+" ";
       points +=     (currentX)+","+
                     (currentY+2*majorAxis)+" ";

     //cBezierNode = svgDocument.createElement("path");
       cBezierNode = svgDocument.createElementNS(svgNS, "path");
       cBezierNode.setAttribute("d", points);
       cBezierNode.setAttribute("style", style);
       gcNode.appendChild(cBezierNode);

       // inner bezier arc...
       points  = "m"+(currentX)+","+(currentY)+" ";
       points += "C"+(currentX+majorAxis)+","+
                     (currentY-3*majorAxis/2)+" ";
       points +=     (currentX+majorAxis/2)+","+
                     (currentY)+" ";
       points +=     (currentX)+","+
                     (currentY+2*majorAxis)+" ";

     //cBezierNode = svgDocument.createElement("path");
       cBezierNode = svgDocument.createElementNS(svgNS, "path");
       cBezierNode.setAttribute("d", points);
       cBezierNode.setAttribute("style", "fill:white");
       gcNode.appendChild(cBezierNode);
    }
  ]]> </script>

<!-- ============================ -->
<defs>
  <filter id="turbFilter4" in="SourceImage" 
           filterUnits="objectBoundingBox">
      <feTurbulence baseFrequency="0.05" numOctaves="1" 
                    result="turbulenceOut1"/> 
        <feDisplacementMap in="SourceGraphic" in2="turbulenceOut1" 
                           xChannelSelector="B" yChannelSelector="B"
                           scale="20"/> 
   </filter>
</defs>

<g id="gc" transform="scale(1.5,1)" 
   filter="url(#turbFilter4)">  
  <rect x="0" y="0" 
        width="800" height="500" 
        fill="none" stroke="none"/>
</g>
</svg>

