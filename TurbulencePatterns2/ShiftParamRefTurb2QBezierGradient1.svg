<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 20010904//EN" 
  "http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd">

<svg width="100%" height="100%" onload="init(evt)"
     xmlns="http://www.w3.org/2000/svg">

  <script type="text/ecmascript"> 
    <![CDATA[
    var basePointX      = 300;
    var basePointY      = 100;
    var fillColor       = "";
    var strokeColor     = "";
    var strokeColors    = ['red','green','blue','yellow'];
    var colorCount      = 4;
    var strokeWidth     = 1;
    var bezierStyle     = "";
    var points          = "";
    var qBezier         = 4;
    var bezierXPts      = Array(qBezier);
    var bezierYPts      = Array(qBezier);
    var bezierWidth     = 0;
    var deltaT          = 0;
    var index           = 0;
    var pointCount      = 0;
    var bezierCount     = 0;
    var bezierGap       = 4;
    var paramXPts       = Array(1);
    var paramYPts       = Array(1);
    var rVal            = 0;
    var gVal            = 0;
    var bVal            = 0;
    var dashStyle       = "4 4 4 4";

    var bezierNode      = null;
    var lineNode        = null;
    var gcNode          = null;
    var svgDocument     = null;
    var svgNS           = "http://www.w3.org/2000/svg";

    function init(evt) {
       svgDocument = evt.target.ownerDocument; 
       gcNode = svgDocument.getElementById("gc")

       initializeBezier();
       parameterizeBezier();
       renderBezier();
    }

    function initializeBezier() {
       bezierXPts[0] = 100;
       bezierYPts[0] = 400;

       bezierXPts[1] = 200;
       bezierYPts[1] = -200;

       bezierXPts[2] = 300;
       bezierYPts[2] = 450;

       bezierXPts[3] = 400;
       bezierYPts[3] = 250;

       points  = "M"+bezierXPts[0]+","+bezierYPts[0]+" "+
                 "Q"+bezierXPts[1]+","+bezierYPts[1]+" "+
                     bezierXPts[2]+","+bezierYPts[2];

       bezierStyle = "stroke-width:8; stroke:red;fill:none";

       bezierNode = svgDocument.createElementNS(svgNS, "path");
       bezierNode.setAttribute("style", bezierStyle);
       bezierNode.setAttribute("d", points);
     //gcNode.appendChild(bezierNode);
    }

    function parameterizeBezier() {
       bezierWidth = bezierXPts[3]-bezierXPts[0];
       deltaT      = 1.0/bezierWidth;

       for(var t=0; t<1; t+=deltaT) {
          paramXPts[pointCount] = bezierXPts[0]*t*t+
                                  bezierXPts[1]*t*(1-t)*2+
                                  bezierXPts[2]*(1-t)*(1-t);

          paramYPts[pointCount] = bezierYPts[0]*t*t+
                                  bezierYPts[1]*t*(1-t)*2+
                                  bezierYPts[2]*(1-t)*(1-t);

          ++pointCount;
       }
    }

    function renderBezier() {
       bezierCount = Math.floor(bezierWidth/bezierGap);

       for(var v1=0; v1<bezierCount-1; v1+=bezierGap) {
          p1 = (Math.floor(1*bezierWidth/3)+1*v1)%bezierCount;
          p2 = (Math.floor(2*bezierWidth/3)+2*v1)%bezierCount;
          p3 = (Math.floor(3*bezierWidth/3)+3*v1)%bezierCount;

          points = "M"+paramXPts[p1]+","+paramYPts[p1]+" "+
                   "C"+paramXPts[p2]+","+(-paramYPts[p2])+" "+
                       (-paramXPts[p3])+","+paramYPts[p3]+" "+
                       (bezierXPts[3])+","+
                       (bezierYPts[3]);

          rVal = v1*255/bezierCount;

          fillColor = "rgb("+rVal+","+gVal+","+bVal+")";

        //strokeColor = strokeColors[++index%colorCount];
          strokeColor = strokeColors[0];
          bezierStyle = "stroke-width:"+strokeWidth+
                        ";stroke:"+strokeColor+
                        ";fill:"+fillColor;

          if( (v1/bezierGap) % 4 == 0 ) {
             bezierStyle += ";filter:url(#turbFilter4)";
          }

          bezierNode = svgDocument.createElementNS(svgNS, "path");
          bezierNode.setAttribute("style", bezierStyle);
          bezierNode.setAttribute("d", points);
          gcNode.appendChild(bezierNode);

          // add symmetric image of bezier curve...
          strokeColor = strokeColors[++index%colorCount];

          bezierStyle += ";stroke:white;stroke-width:0.5"+
                         ";stroke:"+strokeColor+
                         ";stroke-dasharray:"+dashStyle;

          if( (v1/bezierGap) % 4 == 0 ) {
             bezierStyle += ";filter:url(#turbFilter6)";
          }

          points = "M"+paramYPts[v1]+","+paramXPts[v1]+" "+
                   "C"+bezierYPts[1]+","+bezierXPts[1]+" "+
                       bezierYPts[2]+","+bezierXPts[2]+" "+
                       (bezierYPts[3]-paramYPts[v1])+","+
                       (bezierXPts[3]-paramXPts[v1]);

          bezierNode = svgDocument.createElementNS(svgNS, "path");
          bezierNode.setAttribute("style", bezierStyle);
          bezierNode.setAttribute("d", points);
          gcNode.appendChild(bezierNode);
       }
    }
  ]]> </script>

<!-- ============================ -->
<defs>
   <filter id="turbFilter4" in="SourceImage" 
           filterUnits="objectBoundingBox">
      <feTurbulence baseFrequency="0.35" numOctaves="3" 
                    result="turbulenceOut1"/> 
        <feDisplacementMap in="SourceGraphic" in2="turbulenceOut1" 
                           xChannelSelector="B" yChannelSelector="B"
                           scale="30"/> 
   </filter>
</defs>

<g id="gc" transform="translate(50,50) scale(2,1)"
   filter="url(#turbFilter4)">
  <!-- render outer rectangle -->
  <rect x="0" y="0" 
        width="800" height="500" 
        fill="none" stroke="none"/>
</g>
</svg>

