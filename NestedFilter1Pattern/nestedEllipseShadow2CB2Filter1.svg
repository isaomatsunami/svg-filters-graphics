<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 20010904//EN" 
  "http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd">

<svg width="100%" height="100%" onload="init(evt)"
     xmlns:xlink="http://www.w3.org/1999/xlink" 
     xmlns="http://www.w3.org/2000/svg">

  <script type="text/ecmascript"> 
    <![CDATA[
     var basePointX      = 180;
     var basePointY      = 120;
     var shadowX         = 6;
     var shadowY         = 6;
     var minMinor        = 7;
     var minMajor        = 11;
     var minorRadius     = 0;
     var majorRadius     = 0;
     var nestedCount     = 8;
     var majorValues     = Array(nestedCount);
     var minorValues     = Array(nestedCount);
     var style           = "";
     var points          = "";
     var fillColors      = ['red','#880088','blue','yellow'];
     var fillCount       = 4;
     var strokeColors    = ['#880088','white','yellow','red'];
     var strokeCount     = 4;
     var strokeWidths    = [1, 4, 8];
     var widthCount      = 3;
     var dashStyles      = ["4 4 4 4", "2 2 2 2", "1 1 1 1"];
     var dashCount       = 3;
 
     var ellipseeNode    = null;
     var nestedNode      = null;
     var svgDocument     = null;
     var gcNode          = null;
     var svgNS           = "http://www.w3.org/2000/svg";
 
     function init(evt) {
        svgDocument = evt.target.ownerDocument; 
        gcNode = svgDocument.getElementById("gc")

        updatePoints();
        drawSpiral();
     }

     function updatePoints(index) {
        for(var a=0; a<nestedCount; a++) {
           majorValues[a] = (a+1)*minMajor;
           minorValues[a] = (a+1)*minMinor;
        }
     }

     function drawSpiral() {
        for(var a=nestedCount-1; a>=0; a--) {
           if( a % 2 == 0 ) {
              style = "fill:url(#checkerPattern1)"; 
           } else {
              style = "fill:url(#checkerPattern2)"; 
           }

           majorRadius = majorValues[a];
           minorRadius = minorValues[a];
           drawEllipse(); 
        }
     } // drawSpiral

     function drawEllipse() {
        // draw shadow ellipse... 
        ellipseNode = svgDocument.createElementNS(svgNS, "ellipse");
        ellipseNode.setAttribute("style","fill:black");
        ellipseNode.setAttribute("cx",   basePointX+shadowX);
        ellipseNode.setAttribute("cy",   basePointY+shadowY);
        ellipseNode.setAttribute("rx",   majorRadius);
        ellipseNode.setAttribute("ry",   minorRadius);
        gcNode.appendChild(ellipseNode);

        style  = "fill:"+fillColors[majorRadius%fillCount];
        style += ";stroke:"+strokeColors[majorRadius%strokeCount];
        style += ";stroke-dasharray:"+dashStyles[majorRadius%dashCount];
        style += ";stroke-width:"+strokeWidths[majorRadius%widthCount];
        style  = "fill:"+fillColors[majorRadius%fillCount];
        style += ";stroke:"+strokeColors[majorRadius%strokeCount];
        style += ";stroke-dasharray:"+dashStyles[majorRadius%dashCount];
        style += ";stroke-width:"+strokeWidths[majorRadius%widthCount];
 
        ellipseNode = svgDocument.createElementNS(svgNS, "ellipse");
        ellipseNode.setAttribute("style",style);
        ellipseNode.setAttribute("cx",   basePointX);
        ellipseNode.setAttribute("cy",   basePointY);
        ellipseNode.setAttribute("rx",   majorRadius);
        ellipseNode.setAttribute("ry",   minorRadius);
        gcNode.appendChild(ellipseNode);
     }
  ]]> </script>

<!-- ============================ -->
<defs>
  <filter id="turbFilter4" in="SourceImage" 
           filterUnits="objectBoundingBox">
      <feTurbulence baseFrequency="0.5" numOctaves="4" 
                    result="turbulenceOut1"/> 
        <feDisplacementMap in="SourceGraphic" in2="turbulenceOut1" 
                           xChannelSelector="B" yChannelSelector="B"
                           scale="20"/> 
   </filter>

  <pattern id="checkerPattern1" 
           width="80" height="80"
           patternUnits="userSpaceOnUse">

     <rect fill="red"
           x="0"  y="0"  width="40" height="40"/> 

     <rect fill="blue"
           x="40" y="0"  width="40" height="40"/> 

     <rect fill="blue"
           x="0"  y="40" width="40" height="40"/> 

     <rect fill="red"
           x="40" y="40" width="40" height="40"/> 
  </pattern>

  <pattern id="checkerPattern2" 
           width="80" height="80"
           patternUnits="userSpaceOnUse">

     <rect fill="blue"
           x="0"  y="0"  width="40" height="40"/> 

     <rect fill="yellow"
           x="40" y="0"  width="40" height="40"/> 

     <rect fill="red"
           x="0"  y="40" width="40" height="40"/> 

     <rect fill="blue"
           x="40" y="40" width="40" height="40"/> 
  </pattern>
</defs>

<g id="gc" transform="translate(0,0) scale(2,2)"
   filter="url(#turbFilter4)">  
  <rect x="0" y="0" 
        width="800" height="500" 
        fill="none" stroke="none"/>
</g>
</svg>

