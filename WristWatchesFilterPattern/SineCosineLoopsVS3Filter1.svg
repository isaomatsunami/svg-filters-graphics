<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 20010904//EN" 
  "http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd">

<svg width="100%" height="100%" onload="init(evt)"
     xmlns:xlink="http://www.w3.org/1999/xlink" 
     xmlns="http://www.w3.org/2000/svg">

  <script type="text/ecmascript"> 
    <![CDATA[
    var basePointX    = 300;
    var basePointY    = 200;
    var currentX      = 0;
    var currentY      = 0;
    var offsetX       = 0;
    var offsetY       = 0;
    var radius        = 0;
    var minorAxis     = 20;
    var majorAxis     = 40;
    var spiralCount   = 4;
    var Constant      = 200;
    var angle         = 0;
    var maxAngle      = 720;
    var angleDelta    = 2;
    var shortPause    = 10;
    var factor        = 2;
    var strokeWidth   = 1;
    var strokeColor   = "";
    var style         = "";
    var currentStrip  = 0;
    var stripCount    = 20;
    var stripWidth    = maxAngle/stripCount;
    var rVal          = 0;
    var gVal          = 0;
    var bVal          = 0;
    var sine          = 0;
    var cosine        = 0;

    var ellipseNode   = null;
    var polygonNode   = null;
    var rectNode      = null;
    var svgDocument   = null;
    var gcNode        = null;
    var svgNS         = "http://www.w3.org/2000/svg";

    function init(evt) {
       svgDocument = evt.target.ownerDocument; 
       gcNode = svgDocument.getElementById("gc")

       drawSpiral();
    }

    function drawSpiral() {
       for(angle=0; angle<maxAngle; angle+=angleDelta) {
          sine   = Math.sin(factor*angle*Math.PI/180);
          cosine = Math.cos(factor*angle*Math.PI/180);

          radius = Constant*sine*(cosine+1);
  
          offsetX = radius*Math.cos(angle*Math.PI/180);
          offsetY = radius*Math.sin(angle*Math.PI/180);

          currentX = basePointX+offsetX;
          currentY = basePointY-offsetY;
  
          rVal = (angle%stripWidth)*255/stripWidth;
          gVal = (angle%stripWidth)*255/stripWidth;
          bVal = (angle%stripWidth)*255/stripWidth;

          setCurrentColor(angle);

          strokeColor = "rgb("+rVal+","+gVal+","+bVal+")";

          style  = "fill:"+strokeColor;
          style += ";stroke:yellow";
          style += ";stroke-width:"+strokeWidth;

          ellipseNode = document.createElementNS(svgNS, "ellipse");
          ellipseNode.setAttribute("style",style);
          ellipseNode.setAttribute("cx", currentX);
          ellipseNode.setAttribute("cy", currentY);
          ellipseNode.setAttribute("rx", majorAxis);
          ellipseNode.setAttribute("ry", minorAxis);
          gcNode.appendChild(ellipseNode);

          addWatch();
       }
    } // drawSpiral

    function addWatch() {
       // add watch face...
       rectNode = svgDocument.createElementNS(svgNS, "rect");
       rectNode.setAttribute("x",     currentX);
       rectNode.setAttribute("y",     currentY);
       rectNode.setAttribute("width", 80);
       rectNode.setAttribute("height",80);
       rectNode.setAttribute("style",
                   "fill:url(#blueCircle);stroke:yellow");
       gcNode.appendChild(rectNode);

       // add four time dots...
       ellipseNode = document.createElementNS(svgNS, "ellipse");
       ellipseNode.setAttribute("style","fill:url(#redCircle)");
       ellipseNode.setAttribute("cx", currentX+40);
       ellipseNode.setAttribute("cy", currentY+10);
       ellipseNode.setAttribute("rx", 6);
       ellipseNode.setAttribute("ry", 6);
       gcNode.appendChild(ellipseNode);

       ellipseNode = document.createElementNS(svgNS, "ellipse");
       ellipseNode.setAttribute("style","fill:url(#redCircle)");
       ellipseNode.setAttribute("cx", currentX+70);
       ellipseNode.setAttribute("cy", currentY+40);
       ellipseNode.setAttribute("rx", 6);
       ellipseNode.setAttribute("ry", 6);
       gcNode.appendChild(ellipseNode);

       ellipseNode = document.createElementNS(svgNS, "ellipse");
       ellipseNode.setAttribute("style","fill:url(#redCircle)");
       ellipseNode.setAttribute("cx", currentX+40);
       ellipseNode.setAttribute("cy", currentY+70);
       ellipseNode.setAttribute("rx", 6);
       ellipseNode.setAttribute("ry", 6);
       gcNode.appendChild(ellipseNode);

       ellipseNode = document.createElementNS(svgNS, "ellipse");
       ellipseNode.setAttribute("style","fill:url(#redCircle)");
       ellipseNode.setAttribute("cx", currentX+10);
       ellipseNode.setAttribute("cy", currentY+40);
       ellipseNode.setAttribute("rx", 6);
       ellipseNode.setAttribute("ry", 6);
       gcNode.appendChild(ellipseNode);

       // add hour hand...
       points  = (currentX+40)+","+(currentY+40)+" ";
       points += (currentX+55)+","+(currentY+44)+" ";
       points += (currentX+60)+","+(currentY+40)+" ";
       points += (currentX+55)+","+(currentY+36)+" ";
       points += (currentX+40)+","+(currentY+40)+" ";

       polygonNode = svgDocument.createElementNS(svgNS, "polygon");
       polygonNode.setAttribute("style","fill:white");
       polygonNode.setAttribute("points", points);
       gcNode.appendChild(polygonNode);

       // add minute hand...
       points  = (currentX+40)+","+(currentY+40)+" ";
       points += (currentX+42)+","+(currentY+15)+" ";
       points += (currentX+40)+","+(currentY+10)+" ";
       points += (currentX+38)+","+(currentY+15)+" ";
       points += (currentX+40)+","+(currentY+40)+" ";

       polygonNode = svgDocument.createElementNS(svgNS, "polygon");
       polygonNode.setAttribute("style","fill:white");
       polygonNode.setAttribute("points", points);
       gcNode.appendChild(polygonNode);
    }

    function setCurrentColor(angle) {
       currentStrip = Math.floor(angle/stripWidth);

       rVal = 0; gVal = 0; bVal = 0;

       if( currentStrip % 3 == 0 ) {
          rVal = (angle%stripWidth)*255/stripWidth;
       } else if( currentStrip % 3 == 1 ) {
          gVal = (angle%stripWidth)*255/stripWidth;
       } else {
          bVal = (angle%stripWidth)*255/stripWidth;
       }
    } // setCurrentColor
  ]]> </script>

<!-- ============================ -->
<defs>
  <filter id="turbFilter4" in="SourceImage" 
           filterUnits="objectBoundingBox">
      <feTurbulence baseFrequency="0.15" numOctaves="2" 
                    result="turbulenceOut1"/> 
        <feDisplacementMap in="SourceGraphic" in2="turbulenceOut1" 
                           xChannelSelector="B" yChannelSelector="B"
                           scale="40"/> 
   </filter>

  <radialGradient id="yellowCircle" 
                  gradientUnits="objectBoundingBox"
                  fx="70%" fy="70%">
   
    <stop offset="0%"   style="stop-color:#FFFFFF"/>
    <stop offset="40%"  style="stop-color:#AAAA00"/>
    <stop offset="100%" style="stop-color:#666600"/>
  </radialGradient>
 
  <radialGradient id="redCircle" 
                  gradientUnits="objectBoundingBox"
                  fx="70%" fy="70%">
   
    <stop offset="0%"   style="stop-color:#FFFFFF"/>
    <stop offset="40%"  style="stop-color:#AA0000"/>
    <stop offset="100%" style="stop-color:#660000"/>
  </radialGradient>

  <radialGradient id="blueCircle" 
                  gradientUnits="objectBoundingBox"
                  fx="70%" fy="70%">
   
    <stop offset="0%"   style="stop-color:#FFFFFF"/>
    <stop offset="40%"  style="stop-color:#0000AA"/>
    <stop offset="100%" style="stop-color:#000066"/>
  </radialGradient>
</defs>
 
<g id="gc" transform="translate(10,10)" 
   filter="url(#turbFilter4)">   
  <rect x="0" y="0" 
        width="800" height="500" 
        fill="none" stroke="none"/>
</g>
</svg>

